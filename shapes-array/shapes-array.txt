Shapes v2
----------------------------------

sSSs  h   h    a    PPPp  eEEe  sSSs
S     H   H   A A   P  P  E     S
sSSs  HhhhH  A   A  PppP  EEe   sSSs
   S  H   H  AaaaA  P     E        S
SssS  H   H  A   A  P     eeeE  SssS  v2

Make a function that fills 2D arrays with the specified shapes.
This function should have 2 or more parameters depending on the case.
The first parameter of each function is the address of the first element of an array.

Rules:  
a- Use only: '.', 'x' and '\n'.
b- Set 1 character at the time.
c- Use max 2 loops in each function.
Test:
a- Create a function print_arr2D(a2D,size1,size2) to test the result of each function. 
a- Test each function using the given parameter(s).
b- Test using different sizes starting from 0 then odd and even numbers.

Goal:
- Understanding of patterns.
- Understanding of boundaries.
- Understanding of % operator.
- Thinking the best "if" (or "ifs").
- Use of arrays and pointers.

Example:

void square(_, _)
{
	for(_;_;_)
    {
	    for(_;_;_)
        {
        }
    }

    print_arr2D(_, _, _);
}


-------> square(a2D,?)

square(a2D,5)        square(a2D,3)
xxxxx                xxx
x...x                x.x
x...x                xxx
x...x
xxxxx

-------> diagonal_v1(a2D,?)

diagonal_v1(a2D,5)   diagonal_v1(a2D,3)
x....                x..
.x...                .x.
..x..                ..x
...x.
....x

-------> diagonal_v2(a2D,?)

diagonal_v2(a2D,5)   diagonal_v2(a2D,3)
....x                ..x
...x.                .x.
..x..                x..
.x...
x....

-------> diagonal_v3(a2D,?)

diagonal_v3(a2D,5)   diagonal_v3(a2D,3)
x....                x..
xx...                xx.
xxx..                xxx
xxxx.
xxxxx

-------> n_shape(a2D,?)

n_shape(a2D,5)       n_shape(a2D,4)
x...x                x..x
xx..x                xx.x
x.x.x                x.xx
x..xx                x..x
x...x

-------> cross_v1(a2D,?)

cross_v1(a2D,5)      cross_v1(a2D,4)    cross_v1(a2D,3)
x...x                x..x               x.x
.x.x.                .xx.               .x.
..x..                .xx.               x.x
.x.x.                x..x
x...x

-------> cross_v2(a2D,?,?)

cross_v2(a2D,5,3)    cross_v2(a2D,6,4)
x...xx...xx...x      x....xx....xx....xx....x
.x.x..x.x..x.x.      .x..x..x..x..x..x..x..x.
..x....x....x..      ..xx....xx....xx....xx..
.x.x..x.x..x.x.      ..xx....xx....xx....xx..
x...xx...xx...x      .x..x..x..x..x..x..x..x.
                     x....xx....xx....xx....x

-------> diagonals(a2D,?,?)

diagonals_v1(a2D,5,3)   diagonals_v1(a2D,3,5)
x....x....x....         x..x..x..x..x..
.x....x....x...         .x..x..x..x..x.
..x....x....x..         ..x..x..x..x..x
...x....x....x.
....x....x....x

-------> diagonals_v2(a2D,?,?,?)

diagonals_v2(a2D,5,3,7)    diagonals_v2(a2D,3,5,6)
x......x......x....        x.....x.....x.....x.....x..
.x......x......x...        .x.....x.....x.....x.....x.
..x......x......x..        ..x.....x.....x.....x.....x
...x......x......x.
....x......x......x

-------> cross_v3(a2D,?,?)

cross_v3(a2D,9,2)       cross_v3(a2D,12,3)
.xx......               ..xx........
x..x.....               .x..x.......
....x...x               x....x......
.....x.x.               ......x....x
......x..               .......x..x.
.....x.x.               ........xx..
....x...x               ........xx..
x..x.....               .......x..x.
.xx......               ......x....x
                        x....x......
                        .x..x.......
                        ..xx........

-------> cross_v4(a2D,?,?)

cross_v4(a2D,9,2)       cross_v4(a2D,12,3)
.x.....x.               ..x......x..
x.......x               .x........x.
x.......x               x..........x
.x.....x.               x..........x
..x...x..               .x........x.
...x.x...               ..x......x..
....x....               ...x....x...
...x.x...               ....x..x....
..x...x..               .....xx.....
                        .....xx.....
                        ....x..x....
                        ...x....x...

-------> v_shape(a2D,?)

v_shape(a2D,5)          v_shape(a2D,4)
x.......x               x.....x
.x.....x.               .x...x.
..x...x..               ..x.x..
...x.x...               ...x...
....x....

-------> zig_zag(a2D,?)

zig_zag(a2D,5)      zig_zag(a2D,4)      zig_zag(a2D,3)
x.......x....       x.....x...          x...x..
.x.....x.x...       .x...x.x..          .x.x.x.
..x...x...x..       ..x.x...x.          ..x...x
...x.x.....x.       ...x.....x
....x.......x

-------> w_shape(a2D,?)

w_shape(a2D,5)          w_shape(a2D,4)      w_shape(a2D,3)
x.......x.......x       x.....x.....x       x...x...x
.x.....x.x.....x.       .x...x.x...x.       .x.x.x.x.
..x...x...x...x..       ..x.x...x.x..       ..x...x..
...x.x.....x.x...       ...x.....x...
....x.......x....

-------> cross_v5(a2D,?,?)

cross_v5(a2D,7,0)   cross_v5(a2D,7,1)   cross_v5(a2D,7,2)   cross_v5(a2D,8,2)
x.....x             xx.....             .xx....             .xx.....
.x...x.             ..x...x             x..x...             x..x....
..x.x..             ...x.x.             ....x.x             ....x..x
...x...             ..x.x..             .x...x.             .....xx.
..x.x..             .x.x...             x.x....             .xx..xx.
.x...x.             x...x..             ...x..x             x..x....
x.....x             .....xx             ....xx.             ....x..x
                                                            .....xx.

-------> w_shape_fancy(a2D,?)

w_shape_fancy(a2D,5)    w_shape_fancy(a2D,4)    w_shape_fancy(a2D,3)
\.......A......./       \.....A...../           \...A.../
.\...../.\...../.       .\.../.\.../.           .\./.\./.   // add rule:
..\.../...\.../..       ..\./...\./..           ..V...V..   // print '\','/','V','A' allowed
...\./.....\./...       ...V.....V...
....V.......V....

-------> zig_zag_pro(a2D,?,?)

zig_zag_pro(a2D,5,3)    zig_zag_pro(a2D,4,6)    zig_zag_pro(a2D,2,1)
0.......2....           0.....2.....4.....6     0.              // add rules:
.\...../.\...           .\.../.\.../.\.../.     .1              // print numbers allowed
..\.../...\..           ..\./...\./...\./..                     // print '\','/' allowed
...\./.....\.           ...1.....3.....5...     zig_zag_pro(a2D,1,5)
....1.......3                                   012345


------->
Boris Snäll
borissnaell@gmail.com
------->------->------->